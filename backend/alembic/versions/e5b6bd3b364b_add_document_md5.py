"""add document md5

Revision ID: e5b6bd3b364b
Revises: fcd135795f21
Create Date: 2024-04-15 10:36:38.564891

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e5b6bd3b364b'
down_revision = 'fcd135795f21'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user__user_group')
    op.drop_table('user_group__connector_credential_pair')
    op.drop_index('ix_kombu_message_timestamp', table_name='kombu_message')
    op.drop_index('ix_kombu_message_timestamp_id', table_name='kombu_message')
    op.drop_index('ix_kombu_message_visible', table_name='kombu_message')
    op.drop_table('kombu_message')
    op.drop_table('user_group')
    op.drop_table('saml')
    op.drop_table('kombu_queue')
    op.create_foreign_key(None, 'api_key', 'user', ['owner_id'], ['id'])
    op.create_foreign_key(None, 'api_key', 'user', ['user_id'], ['id'])
    op.add_column('chat_message', sa.Column('isolated', sa.Boolean(), nullable=False))
    op.add_column('document', sa.Column('doc_text_md5', sa.String(), nullable=True))
    op.drop_index('ix_document_by_connector_credential_pair_pkey__connecto_27dc', table_name='document_by_connector_credential_pair')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_document_by_connector_credential_pair_pkey__connecto_27dc', 'document_by_connector_credential_pair', ['connector_id', 'credential_id'], unique=False)
    op.drop_column('document', 'doc_text_md5')
    op.create_unique_constraint('chat_message_id_key', 'chat_message', ['id'])
    op.drop_column('chat_message', 'isolated')
    op.drop_constraint(None, 'api_key', type_='foreignkey')
    op.drop_constraint(None, 'api_key', type_='foreignkey')
    op.create_table('kombu_queue',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='kombu_queue_pkey'),
    sa.UniqueConstraint('name', name='kombu_queue_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('saml',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('encrypted_cookie', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='saml_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='saml_pkey'),
    sa.UniqueConstraint('encrypted_cookie', name='saml_encrypted_cookie_key'),
    sa.UniqueConstraint('user_id', name='saml_user_id_key')
    )
    op.create_table('user_group',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_group_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_up_to_date', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_up_for_deletion', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_group_pkey'),
    sa.UniqueConstraint('name', name='user_group_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('kombu_message',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('visible', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('payload', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('version', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('queue_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['queue_id'], ['kombu_queue.id'], name='FK_kombu_message_queue'),
    sa.PrimaryKeyConstraint('id', name='kombu_message_pkey')
    )
    op.create_index('ix_kombu_message_visible', 'kombu_message', ['visible'], unique=False)
    op.create_index('ix_kombu_message_timestamp_id', 'kombu_message', ['timestamp', 'id'], unique=False)
    op.create_index('ix_kombu_message_timestamp', 'kombu_message', ['timestamp'], unique=False)
    op.create_table('user_group__connector_credential_pair',
    sa.Column('user_group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cc_pair_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_current', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cc_pair_id'], ['connector_credential_pair.id'], name='user_group__connector_credential_pair_cc_pair_id_fkey'),
    sa.ForeignKeyConstraint(['user_group_id'], ['user_group.id'], name='user_group__connector_credential_pair_user_group_id_fkey'),
    sa.PrimaryKeyConstraint('user_group_id', 'cc_pair_id', 'is_current', name='user_group__connector_credential_pair_pkey')
    )
    op.create_table('user__user_group',
    sa.Column('user_group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_group_id'], ['user_group.id'], name='user__user_group_user_group_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='user__user_group_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_group_id', 'user_id', name='user__user_group_pkey')
    )
    # ### end Alembic commands ###
